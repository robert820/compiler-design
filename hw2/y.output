Terminals unused in grammar

    DE
    ME
    SE
    AE
    ARROW
    BREAK
    CHAR
    CASE
    CONTINUE
    DECLARE
    DO
    EXIT
    LOOP


State 112 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarations function declarations
    2        | declarations class classes declarations

    3 classes: class classes
    4        | ε

    5 class: CLASS id '{' declarations_and_functions '}'

    6 declaration_and_function: declaration
    7                         | function

    8 declarations_and_functions: declaration_and_function declarations_and_functions
    9                           | ε

   10 function: FUN id '(' arguments ')' returnValue '{' statements '}'

   11 arguments: argument arguments
   12          | ε

   13 argument: id ':' type seperator

   14 seperator: ','
   15          | ε

   16 returnValue: ε
   17            | ':' type

   18 statements: ε
   19           | statement statements

   20 type: STRING
   21     | INT
   22     | BOOL
   23     | FLOAT

   24 statement: declaration
   25          | condition
   26          | loop
   27          | id '=' expression
   28          | RETURN
   29          | RETURN expression
   30          | PRINT '(' expression ')'
   31          | PRINTLN '(' expression ')'
   32          | READ id

   33 expression: integer_expression
   34           | '(' expression ')'
   35           | id '(' expression ')'
   36           | bool_expresssion
   37           | comparison
   38           | id
   39           | integer
   40           | string
   41           | boolean
   42           | real

   43 boolean: TRUE
   44        | FALSE

   45 integer_expression: integer '+' integer
   46                   | '-' integer
   47                   | integer '-' integer
   48                   | integer '*' integer
   49                   | integer '/' integer

   50 bool_expresssion: '!' boolean
   51                 | boolean '&' boolean
   52                 | boolean '|' boolean

   53 condition: IF '(' expression ')' '{' statements '}'
   54          | IF '(' expression ')' statement
   55          | IF '(' expression ')' '{' statements '}' ELSE '{' statements '}'
   56          | IF '(' expression ')' statement ELSE statement
   57          | IF '(' expression ')' statement ELSE '{' statements '}'
   58          | IF '(' expression ')' '{' statements '}' ELSE statement

   59 loop: WHILE '(' expression ')' '{' statements '}'
   60     | WHILE '(' expression ')' statement
   61     | FOR '(' expression ')' '{' statements '}'
   62     | FOR '(' expression ')' statement

   63 comparison: expression '<' expression
   64           | expression LE expression
   65           | expression EQ expression
   66           | expression '>' expression
   67           | expression GE expression
   68           | expression NE expression

   69 declarations: declaration declarations
   70             | ε

   71 declaration: constant_declaration
   72            | variable_declaration
   73            | arrays_declaration

   74 constant_declaration: VAL id '=' expression
   75                     | VAL id ':' type '=' expression

   76 variable_declaration: VAR id
   77                     | VAR id ':' type
   78                     | VAR id '=' expression
   79                     | VAR id ':' type '=' expression

   80 arrays_declaration: VAR id ':' type '[' integer ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 50
    '&' (38) 51
    '(' (40) 10 30 31 34 35 53 54 55 56 57 58 59 60 61 62
    ')' (41) 10 30 31 34 35 53 54 55 56 57 58 59 60 61 62
    '*' (42) 48
    '+' (43) 45
    ',' (44) 14
    '-' (45) 46 47
    '/' (47) 49
    ':' (58) 13 17 75 77 79 80
    '<' (60) 63
    '=' (61) 27 74 75 78 79
    '>' (62) 66
    '[' (91) 80
    ']' (93) 80
    '{' (123) 5 10 53 55 57 58 59 61
    '|' (124) 52
    '}' (125) 5 10 53 55 57 58 59 61
    error (256)
    DE (258)
    ME (259)
    SE (260)
    AE (261)
    NE (262) 68
    EQ (263) 65
    GE (264) 67
    LE (265) 64
    ARROW (266)
    UMINUS (267)
    LOWER_THAN_ELSE (268)
    BOOL (269) 22
    BREAK (270)
    CHAR (271)
    CASE (272)
    CLASS (273) 5
    CONTINUE (274)
    DECLARE (275)
    DO (276)
    IF (277) 53 54 55 56 57 58
    ELSE (278) 55 56 57 58
    EXIT (279)
    FLOAT (280) 23
    FOR (281) 61 62
    FUN (282) 10
    INT (283) 21
    LOOP (284)
    PRINT (285) 30
    PRINTLN (286) 31
    RETURN (287) 28 29
    STRING (288) 20
    VAL (289) 74 75
    VAR (290) 76 77 78 79 80
    WHILE (291) 59 60
    READ (292) 32
    TRUE <bvalue> (293) 43
    FALSE <bvalue> (294) 44
    string <str> (295) 40
    id <str> (296) 5 10 13 27 32 35 38 74 75 76 77 78 79 80
    integer <ivalue> (297) 39 45 46 47 48 49 80
    real <fvalue> (298) 42


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    program (63)
        on left: 1 2
        on right: 0
    classes (64)
        on left: 3 4
        on right: 2 3
    class (65)
        on left: 5
        on right: 2 3
    declaration_and_function (66)
        on left: 6 7
        on right: 8
    declarations_and_functions (67)
        on left: 8 9
        on right: 5 8
    function (68)
        on left: 10
        on right: 1 7
    arguments (69)
        on left: 11 12
        on right: 10 11
    argument (70)
        on left: 13
        on right: 11
    seperator (71)
        on left: 14 15
        on right: 13
    returnValue (72)
        on left: 16 17
        on right: 10
    statements (73)
        on left: 18 19
        on right: 10 19 53 55 57 58 59 61
    type (74)
        on left: 20 21 22 23
        on right: 13 17 75 77 79 80
    statement (75)
        on left: 24 25 26 27 28 29 30 31 32
        on right: 19 54 56 57 58 60 62
    expression (76)
        on left: 33 34 35 36 37 38 39 40 41 42
        on right: 27 29 30 31 34 35 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 74 75 78 79
    boolean <bvalue> (77)
        on left: 43 44
        on right: 41 50 51 52
    integer_expression <ivalue> (78)
        on left: 45 46 47 48 49
        on right: 33
    bool_expresssion <bvalue> (79)
        on left: 50 51 52
        on right: 36
    condition (80)
        on left: 53 54 55 56 57 58
        on right: 25
    loop (81)
        on left: 59 60 61 62
        on right: 26
    comparison (82)
        on left: 63 64 65 66 67 68
        on right: 37
    declarations (83)
        on left: 69 70
        on right: 1 2 69
    declaration (84)
        on left: 71 72 73
        on right: 6 24 69
    constant_declaration (85)
        on left: 74 75
        on right: 71
    variable_declaration (86)
        on left: 76 77 78 79
        on right: 72
    arrays_declaration (87)
        on left: 80
        on right: 73


State 0

    0 $accept: • program $end

    VAL  shift, and go to state 1
    VAR  shift, and go to state 2

    $default  reduce using rule 70 (declarations)

    program               go to state 3
    declarations          go to state 4
    declaration           go to state 5
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 1

   74 constant_declaration: VAL • id '=' expression
   75                     | VAL • id ':' type '=' expression

    id  shift, and go to state 9


State 2

   76 variable_declaration: VAR • id
   77                     | VAR • id ':' type
   78                     | VAR • id '=' expression
   79                     | VAR • id ':' type '=' expression
   80 arrays_declaration: VAR • id ':' type '[' integer ']'

    id  shift, and go to state 10


State 3

    0 $accept: program • $end

    $end  shift, and go to state 11


State 4

    1 program: declarations • function declarations
    2        | declarations • class classes declarations

    CLASS  shift, and go to state 12
    FUN    shift, and go to state 13

    class     go to state 14
    function  go to state 15


State 5

   69 declarations: declaration • declarations

    VAL  shift, and go to state 1
    VAR  shift, and go to state 2

    $default  reduce using rule 70 (declarations)

    declarations          go to state 16
    declaration           go to state 5
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 6

   71 declaration: constant_declaration •

    $default  reduce using rule 71 (declaration)


State 7

   72 declaration: variable_declaration •

    $default  reduce using rule 72 (declaration)


State 8

   73 declaration: arrays_declaration •

    $default  reduce using rule 73 (declaration)


State 9

   74 constant_declaration: VAL id • '=' expression
   75                     | VAL id • ':' type '=' expression

    ':'  shift, and go to state 17
    '='  shift, and go to state 18


State 10

   76 variable_declaration: VAR id •
   77                     | VAR id • ':' type
   78                     | VAR id • '=' expression
   79                     | VAR id • ':' type '=' expression
   80 arrays_declaration: VAR id • ':' type '[' integer ']'

    ':'  shift, and go to state 19
    '='  shift, and go to state 20

    $default  reduce using rule 76 (variable_declaration)


State 11

    0 $accept: program $end •

    $default  accept


State 12

    5 class: CLASS • id '{' declarations_and_functions '}'

    id  shift, and go to state 21


State 13

   10 function: FUN • id '(' arguments ')' returnValue '{' statements '}'

    id  shift, and go to state 22


State 14

    2 program: declarations class • classes declarations

    CLASS  shift, and go to state 12

    $default  reduce using rule 4 (classes)

    classes  go to state 23
    class    go to state 24


State 15

    1 program: declarations function • declarations

    VAL  shift, and go to state 1
    VAR  shift, and go to state 2

    $default  reduce using rule 70 (declarations)

    declarations          go to state 25
    declaration           go to state 5
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 16

   69 declarations: declaration declarations •

    $default  reduce using rule 69 (declarations)


State 17

   75 constant_declaration: VAL id ':' • type '=' expression

    BOOL    shift, and go to state 26
    FLOAT   shift, and go to state 27
    INT     shift, and go to state 28
    STRING  shift, and go to state 29

    type  go to state 30


State 18

   74 constant_declaration: VAL id '=' • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 40
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 19

   77 variable_declaration: VAR id ':' • type
   79                     | VAR id ':' • type '=' expression
   80 arrays_declaration: VAR id ':' • type '[' integer ']'

    BOOL    shift, and go to state 26
    FLOAT   shift, and go to state 27
    INT     shift, and go to state 28
    STRING  shift, and go to state 29

    type  go to state 45


State 20

   78 variable_declaration: VAR id '=' • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 46
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 21

    5 class: CLASS id • '{' declarations_and_functions '}'

    '{'  shift, and go to state 47


State 22

   10 function: FUN id • '(' arguments ')' returnValue '{' statements '}'

    '('  shift, and go to state 48


State 23

    2 program: declarations class classes • declarations

    VAL  shift, and go to state 1
    VAR  shift, and go to state 2

    $default  reduce using rule 70 (declarations)

    declarations          go to state 49
    declaration           go to state 5
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 24

    3 classes: class • classes

    CLASS  shift, and go to state 12

    $default  reduce using rule 4 (classes)

    classes  go to state 50
    class    go to state 24


State 25

    1 program: declarations function declarations •

    $default  reduce using rule 1 (program)


State 26

   22 type: BOOL •

    $default  reduce using rule 22 (type)


State 27

   23 type: FLOAT •

    $default  reduce using rule 23 (type)


State 28

   21 type: INT •

    $default  reduce using rule 21 (type)


State 29

   20 type: STRING •

    $default  reduce using rule 20 (type)


State 30

   75 constant_declaration: VAL id ':' type • '=' expression

    '='  shift, and go to state 51


State 31

   46 integer_expression: '-' • integer

    integer  shift, and go to state 52


State 32

   43 boolean: TRUE •

    $default  reduce using rule 43 (boolean)


State 33

   44 boolean: FALSE •

    $default  reduce using rule 44 (boolean)


State 34

   40 expression: string •

    $default  reduce using rule 40 (expression)


State 35

   35 expression: id • '(' expression ')'
   38           | id •

    '('  shift, and go to state 53

    $default  reduce using rule 38 (expression)


State 36

   39 expression: integer •
   45 integer_expression: integer • '+' integer
   47                   | integer • '-' integer
   48                   | integer • '*' integer
   49                   | integer • '/' integer

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57

    $default  reduce using rule 39 (expression)


State 37

   42 expression: real •

    $default  reduce using rule 42 (expression)


State 38

   34 expression: '(' • expression ')'

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 58
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 39

   50 bool_expresssion: '!' • boolean

    TRUE   shift, and go to state 32
    FALSE  shift, and go to state 33

    boolean  go to state 59


State 40

   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression
   74 constant_declaration: VAL id '=' expression •

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65

    $default  reduce using rule 74 (constant_declaration)


State 41

   41 expression: boolean •
   51 bool_expresssion: boolean • '&' boolean
   52                 | boolean • '|' boolean

    '&'  shift, and go to state 66
    '|'  shift, and go to state 67

    $default  reduce using rule 41 (expression)


State 42

   33 expression: integer_expression •

    $default  reduce using rule 33 (expression)


State 43

   36 expression: bool_expresssion •

    $default  reduce using rule 36 (expression)


State 44

   37 expression: comparison •

    $default  reduce using rule 37 (expression)


State 45

   77 variable_declaration: VAR id ':' type •
   79                     | VAR id ':' type • '=' expression
   80 arrays_declaration: VAR id ':' type • '[' integer ']'

    '='  shift, and go to state 68
    '['  shift, and go to state 69

    $default  reduce using rule 77 (variable_declaration)


State 46

   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression
   78 variable_declaration: VAR id '=' expression •

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65

    $default  reduce using rule 78 (variable_declaration)


State 47

    5 class: CLASS id '{' • declarations_and_functions '}'

    FUN  shift, and go to state 13
    VAL  shift, and go to state 1
    VAR  shift, and go to state 2

    $default  reduce using rule 9 (declarations_and_functions)

    declaration_and_function    go to state 70
    declarations_and_functions  go to state 71
    function                    go to state 72
    declaration                 go to state 73
    constant_declaration        go to state 6
    variable_declaration        go to state 7
    arrays_declaration          go to state 8


State 48

   10 function: FUN id '(' • arguments ')' returnValue '{' statements '}'

    id  shift, and go to state 74

    $default  reduce using rule 12 (arguments)

    arguments  go to state 75
    argument   go to state 76


State 49

    2 program: declarations class classes declarations •

    $default  reduce using rule 2 (program)


State 50

    3 classes: class classes •

    $default  reduce using rule 3 (classes)


State 51

   75 constant_declaration: VAL id ':' type '=' • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 77
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 52

   46 integer_expression: '-' integer •

    $default  reduce using rule 46 (integer_expression)


State 53

   35 expression: id '(' • expression ')'

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 78
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 54

   48 integer_expression: integer '*' • integer

    integer  shift, and go to state 79


State 55

   49 integer_expression: integer '/' • integer

    integer  shift, and go to state 80


State 56

   45 integer_expression: integer '+' • integer

    integer  shift, and go to state 81


State 57

   47 integer_expression: integer '-' • integer

    integer  shift, and go to state 82


State 58

   34 expression: '(' expression • ')'
   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65
    ')'  shift, and go to state 83


State 59

   50 bool_expresssion: '!' boolean •

    $default  reduce using rule 50 (bool_expresssion)


State 60

   68 comparison: expression NE • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 84
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 61

   65 comparison: expression EQ • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 85
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 62

   67 comparison: expression GE • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 86
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 63

   64 comparison: expression LE • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 87
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 64

   66 comparison: expression '>' • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 88
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 65

   63 comparison: expression '<' • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 89
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 66

   51 bool_expresssion: boolean '&' • boolean

    TRUE   shift, and go to state 32
    FALSE  shift, and go to state 33

    boolean  go to state 90


State 67

   52 bool_expresssion: boolean '|' • boolean

    TRUE   shift, and go to state 32
    FALSE  shift, and go to state 33

    boolean  go to state 91


State 68

   79 variable_declaration: VAR id ':' type '=' • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 92
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 69

   80 arrays_declaration: VAR id ':' type '[' • integer ']'

    integer  shift, and go to state 93


State 70

    8 declarations_and_functions: declaration_and_function • declarations_and_functions

    FUN  shift, and go to state 13
    VAL  shift, and go to state 1
    VAR  shift, and go to state 2

    $default  reduce using rule 9 (declarations_and_functions)

    declaration_and_function    go to state 70
    declarations_and_functions  go to state 94
    function                    go to state 72
    declaration                 go to state 73
    constant_declaration        go to state 6
    variable_declaration        go to state 7
    arrays_declaration          go to state 8


State 71

    5 class: CLASS id '{' declarations_and_functions • '}'

    '}'  shift, and go to state 95


State 72

    7 declaration_and_function: function •

    $default  reduce using rule 7 (declaration_and_function)


State 73

    6 declaration_and_function: declaration •

    $default  reduce using rule 6 (declaration_and_function)


State 74

   13 argument: id • ':' type seperator

    ':'  shift, and go to state 96


State 75

   10 function: FUN id '(' arguments • ')' returnValue '{' statements '}'

    ')'  shift, and go to state 97


State 76

   11 arguments: argument • arguments

    id  shift, and go to state 74

    $default  reduce using rule 12 (arguments)

    arguments  go to state 98
    argument   go to state 76


State 77

   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression
   75 constant_declaration: VAL id ':' type '=' expression •

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65

    $default  reduce using rule 75 (constant_declaration)


State 78

   35 expression: id '(' expression • ')'
   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65
    ')'  shift, and go to state 99


State 79

   48 integer_expression: integer '*' integer •

    $default  reduce using rule 48 (integer_expression)


State 80

   49 integer_expression: integer '/' integer •

    $default  reduce using rule 49 (integer_expression)


State 81

   45 integer_expression: integer '+' integer •

    $default  reduce using rule 45 (integer_expression)


State 82

   47 integer_expression: integer '-' integer •

    $default  reduce using rule 47 (integer_expression)


State 83

   34 expression: '(' expression ')' •

    $default  reduce using rule 34 (expression)


State 84

   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression
   68           | expression NE expression •

    $default  reduce using rule 68 (comparison)


State 85

   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   65           | expression EQ expression •
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    $default  reduce using rule 65 (comparison)


State 86

   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   67           | expression GE expression •
   68           | expression • NE expression

    $default  reduce using rule 67 (comparison)


State 87

   63 comparison: expression • '<' expression
   64           | expression • LE expression
   64           | expression LE expression •
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    $default  reduce using rule 64 (comparison)


State 88

   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   66           | expression '>' expression •
   67           | expression • GE expression
   68           | expression • NE expression

    $default  reduce using rule 66 (comparison)


State 89

   63 comparison: expression • '<' expression
   63           | expression '<' expression •
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    $default  reduce using rule 63 (comparison)


State 90

   51 bool_expresssion: boolean '&' boolean •

    $default  reduce using rule 51 (bool_expresssion)


State 91

   52 bool_expresssion: boolean '|' boolean •

    $default  reduce using rule 52 (bool_expresssion)


State 92

   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression
   79 variable_declaration: VAR id ':' type '=' expression •

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65

    $default  reduce using rule 79 (variable_declaration)


State 93

   80 arrays_declaration: VAR id ':' type '[' integer • ']'

    ']'  shift, and go to state 100


State 94

    8 declarations_and_functions: declaration_and_function declarations_and_functions •

    $default  reduce using rule 8 (declarations_and_functions)


State 95

    5 class: CLASS id '{' declarations_and_functions '}' •

    $default  reduce using rule 5 (class)


State 96

   13 argument: id ':' • type seperator

    BOOL    shift, and go to state 26
    FLOAT   shift, and go to state 27
    INT     shift, and go to state 28
    STRING  shift, and go to state 29

    type  go to state 101


State 97

   10 function: FUN id '(' arguments ')' • returnValue '{' statements '}'

    ':'  shift, and go to state 102

    $default  reduce using rule 16 (returnValue)

    returnValue  go to state 103


State 98

   11 arguments: argument arguments •

    $default  reduce using rule 11 (arguments)


State 99

   35 expression: id '(' expression ')' •

    $default  reduce using rule 35 (expression)


State 100

   80 arrays_declaration: VAR id ':' type '[' integer ']' •

    $default  reduce using rule 80 (arrays_declaration)


State 101

   13 argument: id ':' type • seperator

    ','  shift, and go to state 104

    $default  reduce using rule 15 (seperator)

    seperator  go to state 105


State 102

   17 returnValue: ':' • type

    BOOL    shift, and go to state 26
    FLOAT   shift, and go to state 27
    INT     shift, and go to state 28
    STRING  shift, and go to state 29

    type  go to state 106


State 103

   10 function: FUN id '(' arguments ')' returnValue • '{' statements '}'

    '{'  shift, and go to state 107


State 104

   14 seperator: ',' •

    $default  reduce using rule 14 (seperator)


State 105

   13 argument: id ':' type seperator •

    $default  reduce using rule 13 (argument)


State 106

   17 returnValue: ':' type •

    $default  reduce using rule 17 (returnValue)


State 107

   10 function: FUN id '(' arguments ')' returnValue '{' • statements '}'

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115

    $default  reduce using rule 18 (statements)

    statements            go to state 116
    statement             go to state 117
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 108

   53 condition: IF • '(' expression ')' '{' statements '}'
   54          | IF • '(' expression ')' statement
   55          | IF • '(' expression ')' '{' statements '}' ELSE '{' statements '}'
   56          | IF • '(' expression ')' statement ELSE statement
   57          | IF • '(' expression ')' statement ELSE '{' statements '}'
   58          | IF • '(' expression ')' '{' statements '}' ELSE statement

    '('  shift, and go to state 121


State 109

   61 loop: FOR • '(' expression ')' '{' statements '}'
   62     | FOR • '(' expression ')' statement

    '('  shift, and go to state 122


State 110

   30 statement: PRINT • '(' expression ')'

    '('  shift, and go to state 123


State 111

   31 statement: PRINTLN • '(' expression ')'

    '('  shift, and go to state 124


State 112

   28 statement: RETURN •
   29          | RETURN • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    id        [reduce using rule 28 (statement)]
    $default  reduce using rule 28 (statement)

    expression          go to state 125
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 113

   59 loop: WHILE • '(' expression ')' '{' statements '}'
   60     | WHILE • '(' expression ')' statement

    '('  shift, and go to state 126


State 114

   32 statement: READ • id

    id  shift, and go to state 127


State 115

   27 statement: id • '=' expression

    '='  shift, and go to state 128


State 116

   10 function: FUN id '(' arguments ')' returnValue '{' statements • '}'

    '}'  shift, and go to state 129


State 117

   19 statements: statement • statements

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115

    $default  reduce using rule 18 (statements)

    statements            go to state 130
    statement             go to state 117
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 118

   25 statement: condition •

    $default  reduce using rule 25 (statement)


State 119

   26 statement: loop •

    $default  reduce using rule 26 (statement)


State 120

   24 statement: declaration •

    $default  reduce using rule 24 (statement)


State 121

   53 condition: IF '(' • expression ')' '{' statements '}'
   54          | IF '(' • expression ')' statement
   55          | IF '(' • expression ')' '{' statements '}' ELSE '{' statements '}'
   56          | IF '(' • expression ')' statement ELSE statement
   57          | IF '(' • expression ')' statement ELSE '{' statements '}'
   58          | IF '(' • expression ')' '{' statements '}' ELSE statement

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 131
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 122

   61 loop: FOR '(' • expression ')' '{' statements '}'
   62     | FOR '(' • expression ')' statement

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 132
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 123

   30 statement: PRINT '(' • expression ')'

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 133
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 124

   31 statement: PRINTLN '(' • expression ')'

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 134
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 125

   29 statement: RETURN expression •
   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65

    $default  reduce using rule 29 (statement)


State 126

   59 loop: WHILE '(' • expression ')' '{' statements '}'
   60     | WHILE '(' • expression ')' statement

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 135
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 127

   32 statement: READ id •

    $default  reduce using rule 32 (statement)


State 128

   27 statement: id '=' • expression

    '-'      shift, and go to state 31
    TRUE     shift, and go to state 32
    FALSE    shift, and go to state 33
    string   shift, and go to state 34
    id       shift, and go to state 35
    integer  shift, and go to state 36
    real     shift, and go to state 37
    '('      shift, and go to state 38
    '!'      shift, and go to state 39

    expression          go to state 136
    boolean             go to state 41
    integer_expression  go to state 42
    bool_expresssion    go to state 43
    comparison          go to state 44


State 129

   10 function: FUN id '(' arguments ')' returnValue '{' statements '}' •

    $default  reduce using rule 10 (function)


State 130

   19 statements: statement statements •

    $default  reduce using rule 19 (statements)


State 131

   53 condition: IF '(' expression • ')' '{' statements '}'
   54          | IF '(' expression • ')' statement
   55          | IF '(' expression • ')' '{' statements '}' ELSE '{' statements '}'
   56          | IF '(' expression • ')' statement ELSE statement
   57          | IF '(' expression • ')' statement ELSE '{' statements '}'
   58          | IF '(' expression • ')' '{' statements '}' ELSE statement
   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65
    ')'  shift, and go to state 137


State 132

   61 loop: FOR '(' expression • ')' '{' statements '}'
   62     | FOR '(' expression • ')' statement
   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65
    ')'  shift, and go to state 138


State 133

   30 statement: PRINT '(' expression • ')'
   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65
    ')'  shift, and go to state 139


State 134

   31 statement: PRINTLN '(' expression • ')'
   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65
    ')'  shift, and go to state 140


State 135

   59 loop: WHILE '(' expression • ')' '{' statements '}'
   60     | WHILE '(' expression • ')' statement
   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65
    ')'  shift, and go to state 141


State 136

   27 statement: id '=' expression •
   63 comparison: expression • '<' expression
   64           | expression • LE expression
   65           | expression • EQ expression
   66           | expression • '>' expression
   67           | expression • GE expression
   68           | expression • NE expression

    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    '>'  shift, and go to state 64
    '<'  shift, and go to state 65

    $default  reduce using rule 27 (statement)


State 137

   53 condition: IF '(' expression ')' • '{' statements '}'
   54          | IF '(' expression ')' • statement
   55          | IF '(' expression ')' • '{' statements '}' ELSE '{' statements '}'
   56          | IF '(' expression ')' • statement ELSE statement
   57          | IF '(' expression ')' • statement ELSE '{' statements '}'
   58          | IF '(' expression ')' • '{' statements '}' ELSE statement

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115
    '{'      shift, and go to state 142

    statement             go to state 143
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 138

   61 loop: FOR '(' expression ')' • '{' statements '}'
   62     | FOR '(' expression ')' • statement

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115
    '{'      shift, and go to state 144

    statement             go to state 145
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 139

   30 statement: PRINT '(' expression ')' •

    $default  reduce using rule 30 (statement)


State 140

   31 statement: PRINTLN '(' expression ')' •

    $default  reduce using rule 31 (statement)


State 141

   59 loop: WHILE '(' expression ')' • '{' statements '}'
   60     | WHILE '(' expression ')' • statement

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115
    '{'      shift, and go to state 146

    statement             go to state 147
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 142

   53 condition: IF '(' expression ')' '{' • statements '}'
   55          | IF '(' expression ')' '{' • statements '}' ELSE '{' statements '}'
   58          | IF '(' expression ')' '{' • statements '}' ELSE statement

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115

    $default  reduce using rule 18 (statements)

    statements            go to state 148
    statement             go to state 117
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 143

   54 condition: IF '(' expression ')' statement •
   56          | IF '(' expression ')' statement • ELSE statement
   57          | IF '(' expression ')' statement • ELSE '{' statements '}'

    ELSE  shift, and go to state 149

    $default  reduce using rule 54 (condition)


State 144

   61 loop: FOR '(' expression ')' '{' • statements '}'

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115

    $default  reduce using rule 18 (statements)

    statements            go to state 150
    statement             go to state 117
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 145

   62 loop: FOR '(' expression ')' statement •

    $default  reduce using rule 62 (loop)


State 146

   59 loop: WHILE '(' expression ')' '{' • statements '}'

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115

    $default  reduce using rule 18 (statements)

    statements            go to state 151
    statement             go to state 117
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 147

   60 loop: WHILE '(' expression ')' statement •

    $default  reduce using rule 60 (loop)


State 148

   53 condition: IF '(' expression ')' '{' statements • '}'
   55          | IF '(' expression ')' '{' statements • '}' ELSE '{' statements '}'
   58          | IF '(' expression ')' '{' statements • '}' ELSE statement

    '}'  shift, and go to state 152


State 149

   56 condition: IF '(' expression ')' statement ELSE • statement
   57          | IF '(' expression ')' statement ELSE • '{' statements '}'

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115
    '{'      shift, and go to state 153

    statement             go to state 154
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 150

   61 loop: FOR '(' expression ')' '{' statements • '}'

    '}'  shift, and go to state 155


State 151

   59 loop: WHILE '(' expression ')' '{' statements • '}'

    '}'  shift, and go to state 156


State 152

   53 condition: IF '(' expression ')' '{' statements '}' •
   55          | IF '(' expression ')' '{' statements '}' • ELSE '{' statements '}'
   58          | IF '(' expression ')' '{' statements '}' • ELSE statement

    ELSE  shift, and go to state 157

    $default  reduce using rule 53 (condition)


State 153

   57 condition: IF '(' expression ')' statement ELSE '{' • statements '}'

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115

    $default  reduce using rule 18 (statements)

    statements            go to state 158
    statement             go to state 117
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 154

   56 condition: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 56 (condition)


State 155

   61 loop: FOR '(' expression ')' '{' statements '}' •

    $default  reduce using rule 61 (loop)


State 156

   59 loop: WHILE '(' expression ')' '{' statements '}' •

    $default  reduce using rule 59 (loop)


State 157

   55 condition: IF '(' expression ')' '{' statements '}' ELSE • '{' statements '}'
   58          | IF '(' expression ')' '{' statements '}' ELSE • statement

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115
    '{'      shift, and go to state 159

    statement             go to state 160
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 158

   57 condition: IF '(' expression ')' statement ELSE '{' statements • '}'

    '}'  shift, and go to state 161


State 159

   55 condition: IF '(' expression ')' '{' statements '}' ELSE '{' • statements '}'

    IF       shift, and go to state 108
    FOR      shift, and go to state 109
    PRINT    shift, and go to state 110
    PRINTLN  shift, and go to state 111
    RETURN   shift, and go to state 112
    VAL      shift, and go to state 1
    VAR      shift, and go to state 2
    WHILE    shift, and go to state 113
    READ     shift, and go to state 114
    id       shift, and go to state 115

    $default  reduce using rule 18 (statements)

    statements            go to state 162
    statement             go to state 117
    condition             go to state 118
    loop                  go to state 119
    declaration           go to state 120
    constant_declaration  go to state 6
    variable_declaration  go to state 7
    arrays_declaration    go to state 8


State 160

   58 condition: IF '(' expression ')' '{' statements '}' ELSE statement •

    $default  reduce using rule 58 (condition)


State 161

   57 condition: IF '(' expression ')' statement ELSE '{' statements '}' •

    $default  reduce using rule 57 (condition)


State 162

   55 condition: IF '(' expression ')' '{' statements '}' ELSE '{' statements • '}'

    '}'  shift, and go to state 163


State 163

   55 condition: IF '(' expression ')' '{' statements '}' ELSE '{' statements '}' •

    $default  reduce using rule 55 (condition)
